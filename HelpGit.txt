________________________________________________________________________________________________________________________________________________________
MODO PRATICO > 


Iniciando um Repositório
$ git init

git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin (COLE O SEU REPOSITORIO REMOTO)
git push -u origin main

Apagando um repositório
$ rm -rf .git

________________________________________________________________________________________________________________________________________________________
Configurar o repositorio remoto > 

$ git config - -global user.name “seu nome”
$ git config  - - global user.email “seu email”
________________________________________________________________________________________________________________________________________________________
$ git push <repositório-remoto> <nome-da-branch>. (Vincula o repositorio local a um repositorio remoto)

Ou 
$ git push -u origin <nome-da-branch>

________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________________

Setar usuário
git config --global user.name 

Setar email
git config --global user.email 

Setar editor
git config --global core.editor vim

Setar ferramenta de merge
git config --global merge.tool vimdiff

Setar arquivos a serem ignorados
git config --global core.excludesfile ~/.gitignore

Listar configurações
git config --list

________________________________________________________________________________________________________________________________________________________

Vincular repositório local com um repositório remoto
git remote add origin


Exibir informações dos repositórios remotos
git remote show origin


Renomear um repositório remoto
git remote rename origin curso-git


Desvincular um repositório remoto
git remote rm curso-git



Listando Arquivos Modificados
$ git status


________________________________________________________________________________________________________________________________________________________

O primeiro push de um repositório deve conter o nome do repositório remoto e o branch.

git push -u origin master


Os demais pushes não precisam dessa informação

git push


________________________________________________________________________________________________________________________________________________________

Atualizar repositório local de acordo com o repositório remoto

Atualizar os arquivos no branch atual
git pull



Buscar as alterações, mas não aplica-las no branch atual
git fetch








- Listando Branches
$ git branch
$ git branch -a (lista as branchs em local remoto)

- Indo para outra branch
Para mudar para uma outra branch basta usar o comando checkout, passando o nome da branch.

$ git checkout minha-branch

e você adicionar -b, uma nova branch será criada.
$ git checkout -b minha-nova-branch


- Excluindo branches
Para excluir uma branch local basta executar o comando branch com -d ou -D, passando o nome da branch que você quer apagar.

git branch -d nome-da-branch
git branch -D nome-da-branch

A opção -d é mais segura, pois ela só apaga a branch se você já tiver feito merge ou enviado as alterações para seu repositório remoto, evitando perda de código.
A opção -D ignora o estado da sua branch, forçando a sua remoção.
Esse comando apaga apenas a branch local, não removendo branches remotas.


Renomeando branches
Para renomear a sua atual branch local, execute o comando branch com a opção -m, passando o novo nome.

git branch -m novo-nome-da-branch


Se você estiver em uma branch e quiser renomear outra, você deve passar primeiro o nome atual da branch que quer renomear:

git branch -m nome-atual novo-nome

























